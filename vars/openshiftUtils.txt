<?xml version="1.0" encoding="UTF-8"?>
<p>
    Part of <code>@Library('jenkins-pipeline-shared-libraries')</code>
</p>
<dl>
    <dt>
        <code id="openshiftUtils_applyTemplate">openshiftUtils.applyTemplate(ocpUrl:String, ocpProject:String, templateFile:String, credentialsId:String, namespace:Boolean):void</code>
    </dt>
    <dd>
        <p style="color:red">
            Deprecated: Use the openshiftApply() step.
        </p>
        <p>
            OpenShift resource update by applying a template.
            <br />
            Example call:
            <br>
            <code>openshiftUtils.applyTemplate("https://console.appuio.ch/", "my-appuio-project", "template.yaml", "APPUiO_login_token", false)</code>
        </p>
        <ul>
            <li>
                <b>ocpUrl</b> - URL of the OpenShift server API endpoint.
            </li>
            <li>
                <b>ocpProject</b> - Project / Namespace name of the OpenShift project to apply the template.
            </li>
            <li>
                <b>templateFile</b> - Path to the OpenShift template file.
            </li>
            <li>
                <b>credentialsId</b> - The credentialsId of an OpenShift Auth token stored in the Jenkins credential
                manager with which to authenticate. Type of Credential is Secret text.
            </li>
            <li>
                <b>namespace</b> - Boolean parameter. True adds a parameter with the name <code>NAMESPACE_NAME</code>
                and as value the name of the actual OpenShift project.
            </li>
        </ul>
    </dd>
    <dt>
        <code id="openshiftUtils_applyTemplateWithEnvFile">openshiftUtils.applyTemplateWithEnvFile(ocpUrl:String, ocpProject:String, templateFile:String, credentialsId:String, envFile:String, namespace:Boolean):void</code>
    </dt>
    <dd>
        <p style="color:red">
            Deprecated: Use the openshiftApply() step.
        </p>
        <p>
            OpenShift resource update by applying a template with parameter from an environment file.
        </p>
        <p>
            Environment file contains key and value separated by double point.
            <br>
            Example:
            <br>
            <code>KEY: 'value'</code>
        </p>
        <p>
            Example call:
            <br>
            <code>openshiftUtils.applyTemplateWithEnvFile("https://console.appuio.ch/", "my-appuio-project", "template.yaml", "APPUiO_login_token", "test.yaml", false)</code>
        </p>
        <ul>
            <li>
                <b>ocpUrl</b> - URL of the OpenShift server API endpoint.
            </li>
            <li>
                <b>ocpProject</b> - Project / Namespace name of the OpenShift project to apply the template.
            </li>
            <li>
                <b>templateFile</b> - Path to the OpenShift template file.
            </li>
            <li>
                <b>credentialsId</b> - The credentialsId of an OpenShift Auth token stored in the Jenkins credential
                manager with which to authenticate. Type of Credential is Secret text.
            </li>
            <li>
                <b>envFile</b> - Path to the environment file holding all parameter with their values.
            </li>
            <li>
                <b>namespace</b> - Boolean parameter. True adds a parameter with the name <code>NAMESPACE_NAME</code>
                and as value the name of the actual OpenShift project.
            </li>
        </ul>
    </dd>
</dl>
<!-- vim: set ft=html : -->
<!-- code: set language=html : -->
